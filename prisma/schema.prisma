// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  email       String      @unique
  name        String
  password    String
  profilePic  String?
  coverPic    String?
  bio         String?
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Collection {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  userId    String   @unique @db.ObjectId
  published Boolean @default(false)
  order     String[] @unique @db.ObjectId
}

model Painting {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  image      String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  width        Int?
  height      Int?
  sizeUnit   String?
  showPrice   Boolean @default(false)
  price      Int?
  description String?
  userId   String   @unique @db.ObjectId
  collectionIds String[]   @unique @db.ObjectId
  // collection Collection @relation(fields: [collectionId], references: [id])
}


model RefreshToken {
  id          String      @id @default(uuid()) @map("_id") @db.String
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model VerificationToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
