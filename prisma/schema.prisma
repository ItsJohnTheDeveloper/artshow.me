// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  published Boolean @default(false)
  // author    User?   @relation(fields: [authorId], references: [id])
  authorId  String?
}

// model Account {
//   id  String  @id @default(auto()) @map("_id") @db.ObjectId
//   userId             String  @map("user_id")
//   type               String
//   provider           String
//   providerAccountId  String  @map("provider_account_id")
//   refresh_token      String?    @db.String
//   access_token       String?    @db.String
//   id_token           String?    @db.String
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   session_state      String?
//   oauth_token_secret String?
//   oauth_token        String?

//   // user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
//   @@map("accounts")
// }

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  // user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  email       String      @unique
  name        String
  password    String
  profilePic  String?
  coverPic    String?
  bio         String?
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Collection {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  userId    String   @unique @db.ObjectId
  published Boolean @default(false)
  paintings  Painting[]  
}

model Painting {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  collectionId String   @unique @db.ObjectId
  image      String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  width        Int
  height      Int
  price      Int?
  description String?
  collection Collection @relation(fields: [collectionId], references: [id])
}


model RefreshToken {
  id          String      @id @default(uuid()) @map("_id") @db.String
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model VerificationToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
